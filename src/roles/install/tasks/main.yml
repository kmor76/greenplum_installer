---

- name:  check whether centos 7 operator system
  shell: |
    v=$(cat /etc/redhat-release | sed -r 's/.* ([0-9]+)\..*/\1/'); \
    if [ $v -ne 7 ]; then \
        echo "[ERROR]: This system only can run for system CentOS 7 version."; \
        exit 1; \
    fi

- name:  check whether x86_64 platform
  shell: |
    platform=$(uname -m); \
    if [ "$platform" != "x86_64" ]; then \
        echo "[ERROR]: This system only can run for x86_64 operation system."; \
        exit 1; \
    fi

- name: check whether can connect internet
  shell: |
    ping -c 1 -w 1 www.baidu.com > /dev/null; \
    if [ $? -ne 0 ]; then \
        echo "[ERROR]: host can not connect internet world!"; \
        exit 1; \
    fi

- name: add base yum repository
  yum_repository:
    name: base
    description: Base Aliyun Repository
    baseurl: http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/
    gpgcheck: yes
    gpgkey: http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7

- name: add epel yum repository
  yum_repository:
    name: epel
    description: Epel Aliyun Repository
    baseurl: http://mirrors.aliyun.com/epel/7/$basearch
    gpgcheck: no

- name: unmask firewall service
  shell: '{{ item }}'
  with_items:
    - 'systemctl unmask firewalld'
    - 'systemctl stop iptables'
    - 'systemctl disable iptables'
  failed_when: false

- name: stop and disable firewall service
  service: name=firewalld state=stopped enabled=no

- name: make sure for expect is installed
  yum: name=expect state=installed

- name:  close selinux temporary
  shell: setenforce 0
  failed_when: false

- name: close selinux forever
  lineinfile:
    dest: /etc/selinux/config
    regexp: '^SELINUX='
    line: 'SELINUX=disabled'

- name: make sure ntp is installed
  yum: name=ntp state=installed
  tags: ntp

- name: configure sync time using aliyun server
  cron: name="sync time" minute='*/5' hour=* day=* month=* weekday=* job="/usr/sbin/ntpdate -u ntp1.aliyun.com >/dev/null 2>&1"
  ignore_errors: true

- name: change host name to etc-hostname
  raw: 'echo {{hostname|quote}} > /etc/hostname'

- name: change host name by command hostname
  shell: hostname {{hostname|quote}}
    
- name: update configure for etc-hosts
  blockinfile:
    path: /etc/hosts
    block: |-
      {% for item in (groups['node']|default([]))|unique -%}
      {{ item }} {{ hostvars[item]['hostname'] }}
      {% endfor %}
    state: present
    create: yes
    backup: yes
    unsafe_writes: yes
    marker: "# Greenplum Cluster Hosts {mark}"

- name: get shmall 
  shell: echo $(expr $(getconf _PHYS_PAGES) / 2) 
  register: shmall

- name: get shmmax
  shell: echo $(expr $(getconf _PHYS_PAGES) / 2 \* $(getconf PAGE_SIZE))
  register: shmmax

- name: get min_free_kbytes
  shell: awk 'BEGIN {OFMT = "%.0f";} /MemTotal/ {print $2 * .03;}' /proc/meminfo
  register: min_free_kbytes

- name: set shmall
  sysctl:
    name: kernel.shmall
    value: '{{ shmall.stdout }}'
    reload: yes
- name: set shmmax
  sysctl:
    name: kernel.shmmax
    value: '{{ shmmax.stdout }}'
    reload: yes

- name: set min_free_kbytes
  sysctl:
    name: vm.min_free_kbytes
    value: '{{ min_free_kbytes.stdout }}'
    reload: yes

- name: configure sysctl
  sysctl:
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    sysctl_set: yes
    state: present
    reload: yes
    ignoreerrors: yes
  with_dict:
    kernel.shmmni: 4096
    vm.overcommit_memory: 2
    vm.overcommit_ratio: 95
    net.ipv4.ip_local_port_range: 10000 65535
    kernel.sem: 500 2048000 200 32767
    kernel.sysrq: 1
    kernel.core_uses_pid: 1
    kernel.msgmnb: 65536
    kernel.msgmax: 65536
    kernel.msgmni: 2048
    net.ipv4.tcp_syncookies: 1
    net.ipv4.conf.default.accept_source_route: 0
    net.ipv4.tcp_max_syn_backlog: 4096
    net.ipv4.conf.all.arp_filter: 1
    net.core.netdev_max_backlog: 10000
    net.core.rmem_max: 2097152
    net.core.wmem_max: 2097152
    vm.swappiness: 0
    vm.zone_reclaim_mode: 0
    vm.dirty_expire_centisecs: 10
    vm.dirty_writeback_centisecs: 3
    vm.dirty_background_ratio: 10
    vm.dirty_ratio: 20
    vm.dirty_background_bytes: 1610612736
    vm.dirty_bytes: 4294967296

- name: state PAM limits
  pam_limits:
    domain: '*'
    limit_type: '-'
    limit_item: '{{ item.key }}'
    value: '{{ item.value }}'
  with_dict:
    nofile: 655360
    nproc: 655360
    memlock: unlimited
    core: unlimited

- name: copy greeplum rpm package to host
  copy:
    src: '{{ greeplum_package_file }}'
    dest: /tmp

- name: install greeplum rpm package
  yum:
    name: '/tmp/{{ greeplum_package_file | basename }}'
    state: present

- name: cleanup greeplum install package file from host
  file:
    path: '/tmp/{{ greeplum_package_file }}'
    state: absent

- name: create greenplum admin user for each hosts
  user:
    name: '{{ greenplum_admin_user }}'
    password: "{{ greenplum_admin_password | password_hash('sha512') }}"

- name: create data directory if not exist
  file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  with_items:
    - '{{ greenplum_data_directory }}/'
    - '{{ greenplum_data_directory }}/master/'
    - '{{ greenplum_data_directory }}/primary/'
    - '{{ greenplum_data_directory }}/mirror/'

- name: change data directory ownership
  file:
    path: '{{ greenplum_data_directory }}'
    owner: '{{ greenplum_admin_user }}'
    group: '{{ greenplum_admin_user }}'
    recurse: yes